
class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        :思想：用列表记录当前位置往前计算和的最大值
        :如果前面的和小于0，则没必要当前位置与前面的相加，直接记录当前位置的值
        :如果前面的和大于0，则当前位置的最大值为当前位置与之前位置的和
        :如nums=[-2,1,-3,4,-1,2,1,-5,4]
        :  tmp=[-2,1,-2,4,3,5,6,1,5]
        """
        if len(nums) < 1:
            return
        tmp = [0]*len(nums)
        for i,val in enumerate(nums):
            if i == 0:
                tmp[i] = val
            else:
                if tmp[i-1] < 0:
                    tmp[i] = val
                else:
                    tmp[i] = tmp[i-1]+val
        mx = max(tmp)
        return mx
