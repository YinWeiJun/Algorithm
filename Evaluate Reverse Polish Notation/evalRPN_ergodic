class Solution(object):
    def evalRPN(self, tokens):
        """
        :type tokens: List[str]
        :rtype: int
        """
        operators = set(["+", "-", "*", "/"])
        nums = []
        for i in range(len(tokens)):
            if tokens[i] in operators:
                a, b = nums[-2], nums[-1]
                c = self.operation(a, b, tokens[i])
                nums = nums[:-2] + [c]
            else:
                nums.append(int(tokens[i]))
        return nums[0]
        
        
    def operation(self, a, b, operator):
        if operator == "+":
            return a + b
        elif operator == "-":
            return a - b
        elif operator == "*":
            return a * b
        else:
            if not a:
                return 0
            return (abs(a) / abs(b)) * (b / abs(b)) * (a / abs(a))
