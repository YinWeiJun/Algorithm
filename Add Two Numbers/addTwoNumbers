# Definition for singly-linked list.
class ListNode(object):
     def __init__(self, x):
            self.val = x
            self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        res=[]
        x=0
        while l1 and l2:
            val=(l1.val+l2.val+x)
            res.append(val%10)
            x=val/10
            l1=l1.next
            l2=l2.next
        if l2:
            l1=l2
        
        while l1:
            val=(l1.val+x)
            res.append(val%10)
            x=val/10
            l1=l1.next
        
        if x!=0:
            res.append(x)
        
        return res

        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        :思路：直接模仿数学加法，用x=val%10模拟进位，比较值得学习的是l1和l2长度不同，只用计算相同部分，然后通过
        :if l2: l1=l2 直接使得 所有情况 l1都是最长的那个
        """
