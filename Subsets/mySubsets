class Solution:
    #思考：分析需求过程中，往往需要先实践才能明确问题
    #通过枚举发现规律：
    # []-->[]  
    # [1]-->[], [1]-->[],[]+[1]
    #                 == ------
    # [1,2]-->[], [1], [2], [1,2]-->[],[1], []+[2], [1]+[2]
    #                               ======  ---------------
    # [1,2,3]-->[], [1], [2], [3], [1,2], [1,3], [2,3], [1,2,3]--> [], [1], [2], [1,2], []+[3], [1]+[3], [2]+[3], [1,2]+[3]
    #                                                              ===================  -----------------------------------
    def subsets(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        ret = []
        self.bt(nums, ret)
        return ret
        
    def dp(self, nums):
        if len(nums) == 0:
            return ret.append([])
        elif len(nums) == 1:
            return [[],nums]
        else:
            ret = self.dp(nums[:-1])
            print("ret:",ret)
            ret_tmp = []
            for tmp in ret:
                ret_tmp.append(tmp+[nums[-1]])
            print("ret_tmp:",ret_tmp)
            ret += ret_tmp
            return ret                    
            
            
    def bt(self, nums, ret):
        ret.append([])
        for val in nums:
            if len(ret) == 1:
                ret.append([val])
            else:
                ret_tmp = []
                for tmp in ret:
                    ret_tmp.append(tmp+[val])
                ret += ret_tmp
