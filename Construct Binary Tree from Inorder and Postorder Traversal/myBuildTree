# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

# 树的问题，第一想法递归
class Solution:
    def buildTree(self, inorder, postorder):
        """
        :type inorder: List[int]
        :type postorder: List[int]
        :rtype: TreeNode
        """
        if not inorder or not postorder or len(inorder) != len(postorder):
            return None
        root_val = postorder[-1]
        index_inorder = inorder.index(root_val)
        root = TreeNode(root_val)
        if index_inorder > 0:
            left_tree = self.buildTree(inorder[0:index_inorder], postorder[0:index_inorder])
            root.left = left_tree
        if index_inorder < len(inorder) - 1:
            right_tree = self.buildTree(inorder[index_inorder+1:], postorder[index_inorder:-1])
            root.right = right_tree
        return root
        
