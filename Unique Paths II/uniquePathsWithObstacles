class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        :思想：深度优先
        """
        if obstacleGrid[-1][-1]==1:
            return 0
        m=len(obstacleGrid)
        n=len(obstacleGrid[0])
        aux = [[0 for x in range(n)] for x in range(m)]
        for i in range(0, m):
            for j in range(0, n):
                if obstacleGrid[m-1-i][n-1-j]==1:
                    aux[i][j]=0
                else:
                    if i==0 and j==0: 
                        aux[i][j] = 1
                    else:
                        aux[i][j] = aux[i][j-1]+aux[i-1][j]
        return aux[-1][-1]
