class Solution(object):
    def threeSum(self, nums):
        res = []
        nums.sort()
        for i in xrange(len(nums)-2):
            if i > 0 and nums[i] == nums[i-1]:
                continue
            l, r = i+1, len(nums)-1
            while l < r:
                s = nums[i] + nums[l] + nums[r]
                if s < 0:
                    l +=1 
                elif s > 0:
                    r -= 1
                else:
                    res.append((nums[i], nums[l], nums[r]))
                    while l < r and nums[l] == nums[l+1]:
                        l += 1
                    while l < r and nums[r] == nums[r-1]:
                        r -= 1
                    l += 1; r -= 1
        return res
            
        
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        :思想，将数组排序之后，每次固定一个数，判断该数与其右边所有数的和，找到和为0的结果即可
        :固定一个数之后，采用l,r两个游标，由于数组已经排序，所以，如果3个数的和大于0，那么想要和为0，
        :r-=1,当然如果nums[r]==nums[r+1]，则结果显然不变，所以r-=1；如果3数和小于0，那么需要l+=1,nums[l]==nums[l-1],则l+=1
        """
