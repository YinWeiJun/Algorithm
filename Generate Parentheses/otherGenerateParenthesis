dp = {}
def gp(n):
    if n == 0:
        dp[0] = ['']
        return dp[0]
    elif n == 1:
        dp[n] = ['()']
        return dp[n]
    elif n in dp:
        return dp[n]
    else:
        dp[n] =  ['({}){}'.format(a,b) for i in range(n) for a in gp(i) for b in gp(n-i-1)]
        return dp[n]
    

class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        :思路和my一样，当时用全局变量记录计算过的情况，减少重复计算
        """
        return gp(n)
