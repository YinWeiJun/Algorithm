class Solution(object):
    def fourSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[List[int]]
        :思想:结合３Sum和２Sum，利用字典book将算法效率冲O(n^4)降到O(n^3)
        """
        if len(nums)<4:
            return []
        book={}
        res=[]
        nums.sort()
        print nums
        print '----------------'
        for i in xrange(len(nums)-3):
            tmp=target-nums[i]
            newR=[nums[i]]
            for j in xrange(i+1,len(nums)-2):
                tmp1=tmp-nums[j]
                newR1=newR+[nums[j]]
                book1={}
                for k in xrange(j+1,len(nums)):
                    if tmp1-nums[k] in book1:
                        if book1[tmp1-nums[k]]==1:
                            newR2=newR1+[tmp1-nums[k], nums[k]]
                            if str(newR2) not in book:
                                res.append(newR2)
                                book[str(newR2)]=1
                            book1[tmp1-nums[k]]=2
                            book1[nums[k]]=2
                    else:
                        book1[nums[k]]=1
        return res
