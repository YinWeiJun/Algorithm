# 思路： 首先遍历2D矩阵边缘的所有元素，找到所有“O”元素，存储到队列中
# 遍历队列中的记录，找到相连的所有“O”，记录下来
# 将非所有记录的位置改为“X”

class Solution(object):
    def solve(self, board):
        """
        :type board: List[List[str]]
        :rtype: None Do not return anything, modify board in-place instead.
        """
        if not board:
            return None
        n_i, n_j = len(board), len(board[0])
        list_O, sign = [], {}
        # 寻找边缘的“O”
        i, j = 0, 0
        for i in [0, n_i - 1]:
            for j in range(n_j):
                if board[i][j] == "O":
                    list_O.append((i, j))
                    sign[str((i, j))] = 0
        for j in [0, n_j - 1]:
            for i in range(1, n_i - 1):
                if board[i][j] == "O":
                    list_O.append((i, j))
                    sign[str((i, j))] = 0
        # 寻找所有不被包围的“X”
        k = 0
        while k < len(list_O):
            tmp_i, tmp_j = list_O[k][0], list_O[k][1]
            tmp = self.findO(tmp_i, tmp_j, board, sign)
            list_O += tmp
            k += 1
        
        # 更改所有被包围的“O”为“X”
        for i in range(n_i):
            for j in range(n_j):
                if str((i,j)) not in sign:
                    board[i][j] = "X"
        
        
    # 寻找(i,j)周围的“O”元素
    def findO(self, i, j, board, sign):
        if not board:
            return []
        n_i, n_j = len(board)-1, len(board[0])-1
        if i < 0 or i > n_i or j < 0 or j > n_j:
            return []
        left, right = j - 1, j + 1
        top,  bottom = i - 1, i + 1
        res = []
        if 0 <= left and board[i][left] == "O" and str((i, left)) not in sign:
            res.append((i, left))
            sign[str((i, left))] = 0
        if right <= n_j and board[i][right] == "O" and str((i, right)) not in sign:
            res.append((i, right))
            sign[str((i, right))] = 0
        if 0 <= top and board[top][j] == "O" and str((top, j)) not in sign:
            res.append((top, j))
            sign[str((top, j))] = 0
        if bottom <= n_i and board[bottom][j] == "O" and str((bottom, j)) not in sign:
            res.append((bottom, j))
            sign[str((bottom, j))] = 0
        return res
