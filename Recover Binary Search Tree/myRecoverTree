# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def recoverTree(self, root):
        """
        :type root: TreeNode
        :rtype: void Do not return anything, modify root in-place instead.
        """
        data = []
        self.getData(root, data)
        data.sort()
        print(data)
        self.changeValue(root, data, [0])
        
    def changeValue(self, root, data, i):
        print(i[0])
        if not root:
            return 0
        left = root.left
        if left:
            self.changeValue(left, data, i)
        root.val = data[i[0]]
        i[0] += 1
        right = root.right
        self.changeValue(right, data, i)
        
        
    def getData(self, root, data):
        if not root:
            return 0
        data.append(root.val)
        self.getData(root.left, data)
        self.getData(root.right, data)
        
