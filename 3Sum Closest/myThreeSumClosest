class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        :思想，与3Sum思想类似，只是将0改为判断差值更小，只是在排序之后，如果3个数的和与target的差值，如果差值大（小）于0，说明3数和过大
        :r-=1（l+=1），这样差值会变小。只用判断每一个数找到最小即可。
        """
        nums.sort()
        res=target-nums[0]-nums[1]-nums[2]
        for i in xrange(len(nums)-2):
            if i>0 and nums[i]==nums[i-1]:
                continue
            l, r=i+1,len(nums)-1
            while l<r:
                s=target-nums[i]-nums[l]-nums[r]
                if abs(s)<abs(res):
                    res=s
                if s<0:
                    r-=1
                    while l<r and nums[r]==nums[r+1]:
                        r-=1
                elif s>0:
                    l+=1
                    while l<r and nums[l]==nums[l-1]:
                        l+=1
                else:
                    return target
        return target-res
